#!/usr/bin/env -S python
# -*- mode: python; coding: utf-8 -*-
import os, sys, argparse, optparse, re
sys.path.append(os.path.dirname(os.path.realpath(__file__)) + "/../lib")
from font_utils import open_font
import fontforge
running_as = os.path.splitext(os.path.basename(sys.argv[0]))[0]
def main():
    global args
    parser = optparse.OptionParser()
    parser.add_option('--basename', '-b', action='store_true')
    parser.add_option('--no-filename', '-H', action='store_true')
    opts, args = parser.parse_args()
    for filename in args:
        font = open_font(filename)
        if not font:
            continue
        if running_as == "fontname":
            name = font.fontname
        elif running_as == "fontfamily":
            name = font.familyname
        elif running_as == "fullname":
            name = font.fullname
        if opts.basename:
            filename = os.path.basename(filename)
        if opts.no_filename:
            print("%s" % name)
        else:
            print("%s: %s" % (filename, name))
        font.close()
def csvify(text):
    quote = (text.find('"') >= 0 or text.find(',') >= 0 or
             re.match(r'[\r\n\t\f\x0b ]', text) or text == '')
    text = text.replace('"', '""')
    quotemark = '"' if quote else ''
    return quotemark + text + quotemark
def tsvify(text):
    text = text.replace('\\', '\\\\')
    text = text.replace('\t', '\\t')
    text = text.replace('\r', '\\r')
    text = text.replace('\n', '\\n')
    return text

main()
