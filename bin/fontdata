#!/usr/bin/env -S python
# -*- mode: python; coding: utf-8 -*-
import os, sys, argparse, optparse, re, json
sys.path.append(os.path.dirname(os.path.realpath(__file__)) + "/../lib")
from font_utils import open_font
import fontforge
running_as = os.path.splitext(os.path.basename(sys.argv[0]))[0]
def main():
    for filename in sys.argv[1:]:
        font = open_font(filename)
        if font is None:
            continue
        font_data = {
            "activeLayer": font.activeLayer,
            "ascent": font.ascent,
            "bitmapSizes": font.bitmapSizes,
            "capHeight": font.capHeight,
            "changed": font.changed,
            "cidcopyright": font.cidcopyright,
            "cidfamilyname": font.cidfamilyname,
            "cidfontname": font.cidfontname,
            "cidfullname": font.cidfullname,
            "cidordering": font.cidordering,
            "cidregistry": font.cidregistry,
            "cidsubfont": font.cidsubfont,
            "cidsubfontcnt": font.cidsubfontcnt,
            "cidsubfontnames": font.cidsubfontnames,
            "cidsupplement": font.cidsupplement,
            "cidversion": font.cidversion,
            "cidweight": font.cidweight,
            "comment": font.comment,
            "copyright": font.copyright,
            "cvt": font.cvt,
            "default_base_filename": font.default_base_filename,
            "descent": font.descent,
            "design_size": font.design_size,
            "em": font.em,
            "encoding": font.encoding,
            "familyname": font.familyname,
            "fondname": font.fondname,
            "fontlog": font.fontlog,
            "fontname": font.fontname,
            "fullname": font.fullname,
            "gasp": font.gasp,
            "gasp_version": font.gasp_version,
            "gpos_lookups": font.gpos_lookups,
            "gsub_lookups": font.gsub_lookups,
            "guide": font.guide,
            "hasvmetrics": font.hasvmetrics,
            "head_optimized_for_cleartype": font.head_optimized_for_cleartype,
            "hhea_ascent": font.hhea_ascent,
            "hhea_ascent_add": font.hhea_ascent_add,
            "hhea_descent": font.hhea_descent,
            "hhea_descent_add": font.hhea_descent_add,
            "hhea_linegap": font.hhea_linegap,
            "horizontalBaseline": font.horizontalBaseline,
            "is_cid": font.is_cid,
            "is_quadratic": font.is_quadratic,
            "isnew": font.isnew,
            "italicangle": font.italicangle,
            "macstyle": font.macstyle,
            "layer_cnt": font.layer_cnt,
            "layers": font.layers,
            "loadState": font.loadState,
            "maxp_FDEFs": font.maxp_FDEFs,
            "maxp_IDEFs": font.maxp_IDEFs,
            "maxp_maxStackDepth": font.maxp_maxStackDepth,
            "maxp_storageCnt": font.maxp_storageCnt,
            "maxp_twilightPtCnt": font.maxp_twilightPtCnt,
            "maxp_zones": font.maxp_zones,
            "multilayer": font.multilayer,
            "onlybitmaps": font.onlybitmaps,
            "os2_codepages": font.os2_codepages,
            "os2_family_class": font.os2_family_class,
            "os2_fstype": font.os2_fstype,
            "os2_stylemap": font.os2_stylemap,
            "os2_panose": font.os2_panose,
            "os2_strikeypos": font.os2_strikeypos,
            "os2_strikeysize": font.os2_strikeysize,
            "os2_subxoff": font.os2_subxoff,
            "os2_subxsize": font.os2_subxsize,
            "os2_subyoff": font.os2_subyoff,
            "os2_subysize": font.os2_subysize,
            "os2_supxoff": font.os2_supxoff,
            "os2_supxsize": font.os2_supxsize,
            "os2_supyoff": font.os2_supyoff,
            "os2_supysize": font.os2_supysize,
            "os2_typoascent": font.os2_typoascent,
            "os2_typoascent_add": font.os2_typoascent_add,
            "os2_typodescent": font.os2_typodescent,
            "os2_typodescent_add": font.os2_typodescent_add,
            "os2_typolinegap": font.os2_typolinegap,
            "os2_use_typo_metrics": font.os2_use_typo_metrics,
            "os2_unicoderanges": font.os2_unicoderanges,
            "os2_vendor": font.os2_vendor,
            "os2_version": font.os2_version,
            "os2_weight": font.os2_weight,
            "os2_weight_width_slope_only": font.os2_weight_width_slope_only,
            "os2_width": font.os2_width,
            "os2_winascent": font.os2_winascent,
            "os2_winascent_add": font.os2_winascent_add,
            "os2_windescent": font.os2_windescent,
            "os2_windescent_add": font.os2_windescent_add,
            "path": font.path,
            "persistent": font.persistent,
            "math": font.math,
            "private": font.private,
            "privateState": font.privateState,
            "selection": font.selection,
            "sfd_path": font.sfd_path,
            "sfnt_names": font.sfnt_names,
            "sfntRevision": font.sfntRevision,
            "size_feature": font.size_feature,
            "strokedfont": font.strokedfont,
            "strokewidth": font.strokewidth,
            "temporary": font.temporary,
            "texparameters": font.texparameters,
            "uniqueid": font.uniqueid,
            "upos": font.upos,
            "userdata": font.userdata,
            "uwidth": font.uwidth,
            "version": font.version,
            "verticalBaseline": font.verticalBaseline,
            "vertical_origin": font.vertical_origin,
            "vhea_linegap": font.vhea_linegap,
            "weight": font.weight,
            "woffMajor": font.woffMajor,
            "woffMinor": font.woffMinor,
            "woffMetadata": font.woffMetadata,
            "xHeight": font.xHeight,
        }
        print(json.dumps(font_data, indent=4))
        font.close()

main()
