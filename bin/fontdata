#!/usr/bin/env -S python
# -*- mode: python; coding: utf-8 -*-
import os, sys, argparse, optparse, re, json
sys.path.append(os.path.dirname(os.path.realpath(__file__)) + "/../lib")
from font_utils import open_font
import fontforge
from get_font_data import getFontData
running_as = os.path.splitext(os.path.basename(sys.argv[0]))[0]
def main():
    for filename in sys.argv[1:]:
        fontnames = fontforge.fontsInFile(filename)
        if len(fontnames) >= 2:
            fonts_data = []
            for fontname in fontnames:
                font = open_font("%s(%s)" % (filename, fontname))
                if font is None:
                    continue
                font_data = getFontData(font)
                fonts_data.append(font_data)
                font.close()
                font_data["isTtc"] = True
                font_data["filename"] = filename
                font_data["ttcFontname"] = fontname
                print(json.dumps(font_data, indent=4))
        else:
            font = open_font(filename)
            if font is None:
                return None
            font_data = getFontData(font)
            font_data["isTTC"] = False
            font_data["filename"] = filename
            print(json.dumps(font_data, indent=4))
            font.close()

main()
